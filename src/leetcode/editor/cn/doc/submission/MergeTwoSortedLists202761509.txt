/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1==null&&l2==null)return null; 
        if(l1!=null&&l2==null)return l1; 
        if(l1==null&&l2!=null)return l2; 
        ListNode res = new ListNode();
        ListNode cur = res;
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        while(temp1!=null&&temp2!=null){
            if(temp1.val>temp2.val){
                cur.next=temp2;
                temp2=temp2.next;
            }else{
                cur.next=temp1;
                temp1=temp1.next;
            }
            cur = cur.next;
        }
        while(temp1!=null){
            cur.next =temp1;
            temp1=temp1.next;
            cur = cur.next;
        }
          while(temp2!=null){
            cur.next =temp2;
            temp2=temp2.next;
             cur = cur.next;
        }
        return res.next;
    }
}
//runtime:0 ms
//memory:38.1 MB
