/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
   // List<Integer>  res = new ArrayList<>();
    public List<Integer> preorderTraversal(TreeNode root) {  
       List<Integer>  res = new ArrayList<>();
       if(root == null) return res;      
       Stack<TreeNode> stack = new Stack<>();
       stack.push(root);//将根节点压入栈
        while(!stack.isEmpty()){
            TreeNode node = stack.pop();
            res.add(node.val);
            if(node.right!=null)
               stack.push(node.right);
             if(node.left!=null)
               stack.push(node.left);  
        }
            return res;
    }
}
//runtime:1 ms
//memory:36.8 MB
