> Problem: [104. 二叉树的最大深度](https://leetcode.cn/problems/maximum-depth-of-binary-tree/description/)

[TOC]

# 思路

最大深度的重点在于是比较左子树和右子树的深度可以利用DFS算法。

# 解题方法

构造比较左右子树函数，通过递归计数并进行比较返回出该二叉树最大深度。

# Code

* []

```Java
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxDepth(TreeNode root){
        if(root == null)
            return 0;
        int depth = 0;
        depth = Depth(depth, root);
        return depth;
    }

    private static int Depth(int d, TreeNode root){
        int l = d, r = d;
        if(root.left != null){
            l = Depth(l, root.left);
        }
        if(root.right != null){
            r = Depth(r, root.right);
        }
        return Math.max(l, r) + 1;
    }  
}
```

