class Solution {
    public int search(int[] nums, int target) {
       // Arrays.sort(nums);
        
        int n= nums.length;
        if(n == 0) return -1;
        int left = 0;
        int right = n-1;
      //  int mid = 0;
        int midIndex = 0;
        int flag=0;
        for(int i = 0 ;i<n ;i++){
            if(target == nums[i]){
                flag = 1;
                break;
            }else{
                flag =0;
            }
        }
        while(left<=right && flag ==1){
              
            //  midIndex = left + (right -left)/2;
              midIndex = left +((right -left)>>1);
             // mid = nums[midIndex];
            if(nums[left] == target) return left;
            if(nums[right] == target) return right;
            if( nums[midIndex] == target) return midIndex;
            if( nums[midIndex] > target) {
                if(target<nums[0]){
                    if( nums[midIndex]>nums[0])
                    {
                        left =midIndex+1;
                    }else{
                        right = midIndex-1;
                    }
                }else{
                    right = midIndex-1;
                }
                
               
            }
            if( nums[midIndex] < target) {
                if(target>nums[0]){
                    if( nums[midIndex]>nums[0])
                    {
                        left =midIndex+1;
                    }else{
                        right = midIndex-1;
                    }
                }else{
                    left = midIndex+1;
                }
                
            }
        }
        
     
        
        return -1;

    }
}
//runtime:0 ms
//memory:38.2 MB
